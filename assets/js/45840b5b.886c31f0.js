"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[989],{8728:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=n(4848),a=n(8453);const o={slug:"/internationalization",sidebar_label:"I18n",title:"Internationalization",id:"internationalization",keywords:["i18n","internationalization","translation","localization","i18next","react-i18next"]},r=void 0,s={id:"Guides/internationalization",title:"Internationalization",description:"As mentioned earlier, the boilerplate places a strong emphasis on maintaining a clean separation of concerns.",source:"@site/docs/04-Guides/03-I18n.md",sourceDirName:"04-Guides",slug:"/internationalization",permalink:"/react-native-boilerplate/docs/internationalization",draft:!1,unlisted:!1,editUrl:"https://github.com/thecodingmachine/react-native-boilerplate/edit/main/website-documentation/docs/docs/04-Guides/03-I18n.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/internationalization",sidebar_label:"I18n",title:"Internationalization",id:"internationalization",keywords:["i18n","internationalization","translation","localization","i18next","react-i18next"]},sidebar:"tutorialSidebar",previous:{title:"Data Fetching",permalink:"/react-native-boilerplate/docs/data-fetching"},next:{title:"How to use it?",permalink:"/react-native-boilerplate/docs/theming/how-to-use"}},l={},c=[{value:"Translation files structure",id:"translation-files-structure",level:2},{value:"Going further",id:"going-further",level:2}];function d(t){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"As mentioned earlier, the boilerplate places a strong emphasis on maintaining a clean separation of concerns.\nThis is particularly important when it comes to organizing the textual content within your application, as it facilitates\nthe process of translating the application into different languages.\nThe boilerplate offers a structured solution for this separation while also providing a translation tool."}),"\n",(0,i.jsx)(e.p,{children:"To achieve this, the boilerplate leverages the react-i18next library. This library streamlines the task of translating\nthe content within a React application, making it straightforward to switch between different languages\nwithin the application's interface."}),"\n",(0,i.jsx)(e.h2,{id:"translation-files-structure",children:"Translation files structure"}),"\n",(0,i.jsxs)(e.p,{children:["All the translations are situated in the ",(0,i.jsx)(e.code,{children:"src/translations"})," folder.\nWithin this folder, you'll find one file for each language."]}),"\n",(0,i.jsxs)(e.p,{children:["These translation files are loaded into the i18n instance, which is located in the ",(0,i.jsx)(e.code,{children:"src/translations/index.ts"})," file.\nThis setup centralizes and manages the translation resources for your application, making it easier to maintain\nand switch between different languages as needed."]}),"\n",(0,i.jsx)(e.h2,{id:"going-further",children:"Going further"}),"\n",(0,i.jsxs)(e.p,{children:["As always, we adhere to community best practices rather than custom patterns.\nIf you're interested in delving deeper into the topic of internationalization,\nWe recommend exploring the ",(0,i.jsx)(e.a,{href:"https://react.i18next.com/",children:"react-i18next documentation"}),".\nIt provides comprehensive information and guidance on effectively implementing internationalization in your React application."]}),"\n",(0,i.jsx)(e.admonition,{title:"Good to know",type:"info",children:(0,i.jsx)(e.p,{children:"The boilerplate incorporates an Example screen that serves as a demonstration of how to use the i18n library,\ncomplete with a button for changing the language."})})]})}function h(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>s});var i=n(6540);const a={},o=i.createContext(a);function r(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);