"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5505],{3973:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var t=i(4848),s=i(8453);const l={slug:"/BetaBuild",title:"Beta build"},o="Distributing beta builds",a={id:"BetaBuild",title:"Beta build",description:"\ud83d\udea7 It's an old documentation, we are looking for contributors \ud83d\udea7",source:"@site/docs/06-BetaBuild.md",sourceDirName:".",slug:"/BetaBuild",permalink:"/react-native-boilerplate/docs/BetaBuild",draft:!1,unlisted:!1,editUrl:"https://github.com/thecodingmachine/react-native-boilerplate/edit/main/website-documentation/docs/docs/06-BetaBuild.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{slug:"/BetaBuild",title:"Beta build"},sidebar:"tutorialSidebar",previous:{title:"Debugging",permalink:"/react-native-boilerplate/docs/debugging"}},r={},d=[{value:"Before you start",id:"before-you-start",level:2},{value:"Installing Fastlane",id:"installing-fastlane",level:2},{value:"iOS",id:"ios",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setting up",id:"setting-up",level:3},{value:"Code signing",id:"code-signing",level:3},{value:"Creating a beta build",id:"creating-a-beta-build",level:3},{value:"Android",id:"android",level:2},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Setting up",id:"setting-up-1",level:3},{value:"Generating a signing key",id:"generating-a-signing-key",level:4},{value:"Creating a beta build",id:"creating-a-beta-build-1",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Stuck at <code>bundle install</code> or <code>bundle update</code> running <code>fastlane init</code>",id:"stuck-at-bundle-install-or-bundle-update-running-fastlane-init",level:3},{value:"Permission denied running android beta lane",id:"permission-denied-running-android-beta-lane",level:3},{value:"Fastlane init failed",id:"fastlane-init-failed",level:3}];function c(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"\ud83d\udea7 It's an old documentation, we are looking for contributors \ud83d\udea7"}),"\n",(0,t.jsx)(n.h1,{id:"distributing-beta-builds",children:"Distributing beta builds"}),"\n",(0,t.jsx)(n.p,{children:"Developers love writing React Native code but no one likes deploying React Native app or distributing beta builds."}),"\n",(0,t.jsxs)(n.p,{children:["All your headaches will disappear with this documentation and the amazing ",(0,t.jsx)(n.a,{href:"https://fastlane.tools/",children:"Fastlane"})," tool :)"]}),"\n",(0,t.jsx)(n.h2,{id:"before-you-start",children:"Before you start"}),"\n",(0,t.jsxs)(n.p,{children:["You need a Mac. I'm sorry, but if you are a Windows user, you can stop reading right now.",(0,t.jsx)(n.br,{}),"\n","Fastlane will not work on Windows PC. But in all cases, if you need to deploy your app on IOS, you must have a Mac."]}),"\n",(0,t.jsx)(n.p,{children:"Let's explain which tools we are using to distribute beta builds:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://fastlane.tools/",children:"Fastlane"}),", the easiest way to automate beta deployments and releases for your iOS and Android apps. It handles all tedious tasks like generating screenshots, dealing with code signing and releasing your application."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://developer.apple.com/testflight/",children:"TestFlight"}),", part of App Store Connect, let you build your iOS app and invite internal or external users to test it"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://support.google.com/googleplay/android-developer/answer/3131213?hl=fr",children:"Google Play"}),", which does the same job as TestFlight for Android apps"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"If you love this documentation, give us a star, you will be a ray of sunshine in our lives :)\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"This documentation is a part of a React Native project template for building solid applications through separation of concerns between the UI, state management and business logic."}),"\n",(0,t.jsxs)(n.em,{children:["Just navigate to the ",(0,t.jsx)(n.a,{href:"https://github.com/thecodingmachine/react-native-boilerplate",children:"project home page"})," if you want to see more."]})]}),"\n",(0,t.jsx)(n.h2,{id:"installing-fastlane",children:"Installing Fastlane"}),"\n",(0,t.jsx)(n.p,{children:"First you need to install Fastlane on your Mac. Follow these steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install the latest Xcode command line tools:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ xcode-select --install\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Install Ruby using ",(0,t.jsx)(n.a,{href:"https://brew.sh/",children:"Homebrew"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ brew install ruby\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Install Fastlane with RubyGems:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ sudo gem install fastlane -NV\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You are now ready to set up Fastlane for iOS and Android ","\ud83d\ude80"]}),"\n",(0,t.jsx)(n.h2,{id:"ios",children:"iOS"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before continuing make sure you have:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Install all ",(0,t.jsx)(n.a,{href:"https://facebook.github.io/react-native/docs/getting-started.html#installing-dependencies",children:"required dependencies"}),", with Xcode 9 or higher"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Choose the ",(0,t.jsx)(n.a,{href:"https://cocoacasts.com/what-are-app-ids-and-bundle-identifiers/",children:"bundle identifier"})," of your app (for example ",(0,t.jsx)(n.code,{children:"com.tcm.boilerplate"}),")"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","An Apple ID with an admin user, with its username (email, for example ",(0,t.jsx)(n.code,{children:"dev-team@yourcompany.com"}),") and password"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Your app name, if not already created on the Developer Portal (for example ",(0,t.jsx)(n.code,{children:"TCM React Native Boilerplate"}),"). Fastlane can create applications in the Developer Portal and App Store Connect, so it's recommended to let Fastlane do the job for you."]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Use the right ",(0,t.jsx)(n.a,{href:"https://github.com/thecodingmachine/react-native-boilerplate/blob/master/template/ios/.gitignore",children:".gitignore"})," file inside the ",(0,t.jsx)(n.code,{children:"ios"})," directory"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","You also need to create an App Icon to use Fastlane or you will get an error on running ",(0,t.jsx)(n.code,{children:"fastlane beta"}),". You can simply create one using the website ",(0,t.jsx)(n.a,{href:"https://makeappicon.com/",children:"MakeAppIcon"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Open your Xcode project and modify some information:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","In the ",(0,t.jsx)(n.code,{children:"General"})," tab, ",(0,t.jsx)(n.code,{children:"Identity"})," section, change the ",(0,t.jsx)(n.code,{children:"Bundle Identifier"})," to your identifier (useful for Fastlane)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","In the ",(0,t.jsx)(n.code,{children:"Signing & Capabilities"})," tab, ",(0,t.jsx)(n.code,{children:"Signing"})," section, disable ",(0,t.jsx)(n.code,{children:"Automatically manage signing"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","In the ",(0,t.jsx)(n.code,{children:"Build Settings"})," tab, set view filter on top to ",(0,t.jsx)(n.code,{children:"All"})," and ",(0,t.jsx)(n.code,{children:"Combined"}),", then go to the ",(0,t.jsx)(n.code,{children:"Signing"})," section and into ",(0,t.jsx)(n.code,{children:"Code Signing Identity"}),", set ",(0,t.jsx)(n.code,{children:"Don't Code Sign"})," for the ",(0,t.jsx)(n.code,{children:"debug"})," line (including ",(0,t.jsx)(n.code,{children:"Any iOS SDK"})," also) and set ",(0,t.jsx)(n.code,{children:"iOS Distribution"})," for the ",(0,t.jsx)(n.code,{children:"release"})," line (including ",(0,t.jsx)(n.code,{children:"Any iOS SDK"})," also)."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Like this:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Code Signing Identity"}),(0,t.jsx)(n.th,{children:"< Multiple values >"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Debug"}),(0,t.jsx)(n.td,{children:"Don't Code Sign"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Any iOS SDK"}),(0,t.jsx)(n.td,{children:"Don't Code Sign"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Release"}),(0,t.jsx)(n.td,{children:"iOS Distribution"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Any iOS SDK"}),(0,t.jsx)(n.td,{children:"iOS Distribution"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"setting-up",children:"Setting up"}),"\n",(0,t.jsx)(n.p,{children:"First you need to set up Fastlane for your iOS project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ cd my-project/ios\n$ fastlane init\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Note: If you have an error on this step, please see the ",(0,t.jsx)(n.code,{children:"issues"})," section."]})}),"\n",(0,t.jsx)(n.p,{children:"Fastlane will automatically detect your project and ask for any missing information."}),"\n",(0,t.jsx)(n.p,{children:"The following questions will be asked:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"What would you like to use fastlane for?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For this tutorial a good answer is ",(0,t.jsx)(n.code,{children:"2 - Automate beta distribution to TestFlight"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Select Scheme:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Here we will select the scheme without ",(0,t.jsx)(n.code,{children:"-tvOS"})," suffix"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Apple ID Username:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If you don't know, you didn't read the \"Prerequisites\" step :)",(0,t.jsx)(n.br,{}),"\n","Our answer is ",(0,t.jsx)(n.code,{children:"dev-team@yourcompany.com"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Password (for Apple ID Username):"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If you don't know, you didn't read the \"Prerequisites\" step :)",(0,t.jsx)(n.br,{}),"\n","Our answer is ",(0,t.jsx)(n.code,{children:"keep it secret"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If your account has multiple teams in the App Store Connect, you may have this question: ",(0,t.jsx)(n.code,{children:"Multiple App Store Connect teams found, please enter the number of the team you want to use:"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Select the right team"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If your account has multiple teams in the Developer Portal, you may have this question: ",(0,t.jsx)(n.code,{children:"Multiple teams found on the Developer Portal, please enter the number of the team you want to use:"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Select the right team"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If you haven't already created the App on the Developer Portal or App Store Connect, Fastlane can do it for you! (else you must have a message ",(0,t.jsx)(n.code,{children:"Your app 'com.tcm.boilerplate' is available in your Apple Developer Portal / App Store Connect"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It will ask ",(0,t.jsx)(n.code,{children:"Do you want fastlane to create the App ID for you on the Apple Developer Portal / App Store Connect? (y/n)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type ",(0,t.jsx)(n.code,{children:"y"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"App Name"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"TCM React Native Boilerplate"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Fastlane will then give you some information about git, the files it will create, etc. Just type ",(0,t.jsx)(n.code,{children:"enter"})," to continue."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Congrats!"})," Fastlane has created some files."]}),"\n",(0,t.jsx)(n.p,{children:"If you are using Git, commit all generated files."}),"\n",(0,t.jsxs)(n.p,{children:["Once the setup has finished you can see a new folder inside the ",(0,t.jsx)(n.code,{children:"ios"})," folder:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" - fastlane/\n   - Appfile\n   - Fastfile\n"})}),"\n",(0,t.jsxs)(n.p,{children:["It's not finish, you need to follow ",(0,t.jsx)(n.code,{children:"Code Signing"})," part to setting up a provisioning profile."]}),"\n",(0,t.jsx)(n.p,{children:"For information:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Appfile"})," contains identifiers used to connect to the Developer Portal and App Store Connect.\nYou can read more about this file ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/advanced/#appfile",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Fastfile"})," contains all actions you can launch.\nYou can read more about this file ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/actions",children:"here"}),".\nBecause we previously chose ",(0,t.jsx)(n.code,{children:"Automate beta distribution to TestFlight"})," on set up, a ",(0,t.jsx)(n.code,{children:"beta"})," ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/advanced/lanes/",children:"lane"})," is available by default.\nThis ",(0,t.jsx)(n.code,{children:"lane"})," contains 3 actions:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"increment the build number of your app"}),"\n",(0,t.jsx)(n.li,{children:"build your app"}),"\n",(0,t.jsx)(n.li,{children:"upload to TestFlight"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"code-signing",children:"Code signing"}),"\n",(0,t.jsx)(n.p,{children:"Signing your app assures users that it is from a known source and the app hasn\u2019t been modified since it was last signed. Before your app can integrate app services, be installed on a device, or be submitted to the App Store, it must be signed with a certificate issued by Apple."}),"\n",(0,t.jsxs)(n.p,{children:["A full guide is available on the fastlane doc, describing the best approaches for your ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/codesigning/getting-started/",children:"code signing process"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.code,{children:"match"})," is probably ",(0,t.jsx)(n.a,{href:"https://codesigning.guide/",children:"the best solution"}),".",(0,t.jsx)(n.br,{}),"\n","Because we don't want to revoke our existing certificates, but still want an automated setup, we will use ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/codesigning/getting-started/#using-cert-and-sigh",children:"cert and sigh"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Add the following lines to your ",(0,t.jsx)(n.code,{children:"Fastfile"}),", just after the ",(0,t.jsx)(n.code,{children:"increment_build_number"})," function and before ",(0,t.jsx)(n.code,{children:"build_app"})," (Note that you will need to replace some information):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    get_certificates( # Create or get certificate, and install it\n      output_path: "./builds" # Download certificate in the build folder (you don\'t need to create the folder)\n    )\n    get_provisioning_profile( # Create or get provisioning profile\n      output_path: "./builds",  # Download provisioning profile in the build folder\n      filename: "provisioning.mobileprovision" # Rename the local provisioning profile\n    )\n    update_project_provisioning( # Set the project provisioning profile (related in Xcode to the General > Signing Release section)\n      xcodeproj: "Boilerplate.xcodeproj",\n      target_filter: "Boilerplate", # Name of your project\n      profile: "./builds/provisioning.mobileprovision",\n      build_configuration: "Release"\n    )\n    update_project_team( # Set the right team on your project\n      teamid: CredentialsManager::AppfileConfig.try_fetch_value(:team_id)\n    )\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then, we need to configure the provisioning profile for the build step."}),"\n",(0,t.jsxs)(n.p,{children:["Add the following lines to your ",(0,t.jsx)(n.code,{children:"Fastfile"}),", inside the ",(0,t.jsx)(n.code,{children:"build_app"})," function, just after the ",(0,t.jsx)(n.code,{children:"scheme"})," parameter (Make sure you add a ",(0,t.jsx)(n.code,{children:","})," after the ",(0,t.jsx)(n.code,{children:"scheme"})," parameter):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    clean: true,\n    export_method: "app-store",\n    export_options: {\n      provisioningProfiles: {\n          CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) => CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) + " AppStore" # Value of this parameter is the name of the Provisioning Profile. By default, it will be "{bundleId} AppStore"\n      }\n    },\n    build_path: "./builds",\n    output_directory: "./builds"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Thanks to this the Certificates and Provisioning Profile will be automatically created when you will create a beta build!",(0,t.jsx)(n.br,{}),"\n","\ud83d\ude80"," You are now ready to create your first beta build."]}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-beta-build",children:"Creating a beta build"}),"\n",(0,t.jsxs)(n.p,{children:["Creating a beta build and uploading it on TestFlight is now really easy.",(0,t.jsx)(n.br,{}),"\n","Just type the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ cd my-project/ios\n$ fastlane beta\n"})}),"\n",(0,t.jsx)(n.h2,{id:"android",children:"Android"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before continuing make sure you have:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","A Google Play Console ",(0,t.jsx)(n.em,{children:"admin"})," account and its username (email, for example ",(0,t.jsx)(n.code,{children:"dev-team@yourcompany.com"}),") and password"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create your application in the Google Play Console (unlike for iOS Fastlane cannot do that for you)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Use the right ",(0,t.jsx)(n.a,{href:"https://github.com/thecodingmachine/react-native-boilerplate/blob/master/template/android/.gitignore",children:".gitignore"})," file inside the ",(0,t.jsx)(n.code,{children:"android"})," directory (if you are using this boilerplate you are good to go)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/getting-started/android/setup/#collect-your-google-credentials",children:"Collect your Google Credentials"}),(0,t.jsx)(n.br,{}),"\n","\u26a0\ufe0f"," In the Google Play Console, add the parameter ",(0,t.jsx)(n.code,{children:"&hl=en"}),' at the end of the URL (before any #) to switch to English. In some languages, the "Create Service Account" will not be available.\nDownload the JSON key file, and copy it into ',(0,t.jsx)(n.code,{children:"my-project/android/key.json"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Install ",(0,t.jsx)(n.a,{href:"https://facebook.github.io/react-native/docs/getting-started.html#installing-dependencies-1",children:"all dependencies"})," for macOS and Android"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-1",children:"Setting up"}),"\n",(0,t.jsx)(n.p,{children:"First you need to set up Fastlane for your android project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ cd my-project/android\n$ fastlane init\n"})}),"\n",(0,t.jsx)(n.p,{children:"Fastlane will automatically detect your project and ask for any missing information."}),"\n",(0,t.jsx)(n.p,{children:"The following questions will be asked:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Package Name (com.krausefx.app)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Our answer is ",(0,t.jsx)(n.code,{children:"com.tcm.boilerplate"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Path to the json secret file"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type ",(0,t.jsx)(n.code,{children:"key.json"})," (path to the file previously created in the Prerequisites step)"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Download existing metadata and setup metadata management?","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"y"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Fastlane will then give you some information about git, the files it will create, etc. Just type ",(0,t.jsx)(n.code,{children:"enter"})," to continue."]}),"\n",(0,t.jsxs)(n.p,{children:["Congrats! Fastlane has created some files.",(0,t.jsx)(n.br,{}),"\n","If you are using Git, commit all generated files."]}),"\n",(0,t.jsxs)(n.p,{children:["Once the setup has finished you can see a new folder inside the ",(0,t.jsx)(n.code,{children:"android"})," folder:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" - fastlane/\n   - Appfile\n   - Fastfile\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Appfile"})," contains identifiers used to connect to the Google Play Console and the link to the ",(0,t.jsx)(n.code,{children:"key.json"})," file.",(0,t.jsx)(n.br,{}),"\n","You can read more about this file ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/advanced/#appfile",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Fastfile"})," contains all actions you can launch.\nYou can read more about this file ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/actions",children:"here"}),".",(0,t.jsx)(n.br,{}),"\n","A ",(0,t.jsx)(n.code,{children:"beta [lane](https://docs.fastlane.tools/advanced/lanes/)"}),", a ",(0,t.jsx)(n.code,{children:"deploy lane"})," and a ",(0,t.jsx)(n.code,{children:"test lane"})," are available by default."]}),"\n",(0,t.jsxs)(n.p,{children:["You can remove the ",(0,t.jsx)(n.code,{children:"deploy lane"})," to avoid some mistakes, and replace the ",(0,t.jsx)(n.code,{children:"beta"})," lane by the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'  desc "Submit a new Beta Build to Play Store"\n  lane :beta do\n    store_password = prompt(text: "Signing Store Password: ", secure_text: true)\n    key_password = prompt(text: "Alias Key Password: ", secure_text: true)\n    releaseFilePath = File.join(Dir.pwd, "..", "my-release-key.keystore")\n    gradle(task: \'clean\')\n    gradle(\n      task: \'assemble\',\n      build_type: \'Release\',\n      print_command: false,\n      properties: {\n        "android.injected.signing.store.file" => releaseFilePath,\n        "android.injected.signing.store.password" => store_password,\n        "android.injected.signing.key.alias" => "my-key-alias",\n        "android.injected.signing.key.password" => key_password,\n      }\n    )\n    upload_to_play_store(\n      track: \'internal\'\n    )\n'})}),"\n",(0,t.jsx)(n.p,{children:"As you can see, we need to sign our APK with a signing key.\nDon't worry, we will generate it in a moment, let's just explain what the lane do."}),"\n",(0,t.jsxs)(n.p,{children:["First, script ask the user two values : signing store and alias key passwords, with the ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/actions/prompt/",children:(0,t.jsx)(n.code,{children:"prompt"})})," fastlane plugin.\nAsking the user those passwords ensure that no secret keys are stored into your app.",(0,t.jsx)(n.br,{}),"\n","Then, this lane clean your project, assemble the application, automatically injecting signing configuration at runtime, before uploading it in the Google Play Store.",(0,t.jsx)(n.br,{}),"\n","Upload is made ",(0,t.jsx)(n.code,{children:"internally"}),", that means only internal testers will be allowed to download the app. You can learn more about different test types ",(0,t.jsx)(n.a,{href:"https://support.google.com/googleplay/android-developer/answer/3131213",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"generating-a-signing-key",children:"Generating a signing key"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://facebook.github.io/react-native/docs/signed-apk-android#generating-a-signing-key",children:"Official documentation"})," well explained how to generate a signing key."]}),"\n",(0,t.jsx)(n.p,{children:"You simply need to run the following :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This command prompts you for passwords for the keystore and key and for the Distinguished Name fields for your key.",(0,t.jsx)(n.br,{}),"\n","It then generates the keystore as a file called ",(0,t.jsx)(n.code,{children:"my-release-key.keystore"})]}),"\n",(0,t.jsx)(n.p,{children:"Note: Remember to keep your keystore file private and never commit it to version control."}),"\n",(0,t.jsxs)(n.p,{children:["Copy the generated ",(0,t.jsx)(n.code,{children:"my-release-key.keystore"})," file into the root of ",(0,t.jsx)(n.code,{children:"android"})," folder."]}),"\n",(0,t.jsx)(n.p,{children:"You're now good to build and deploy !"}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-beta-build-1",children:"Creating a beta build"}),"\n",(0,t.jsxs)(n.p,{children:["\u26a0\ufe0f"," The first time you deploy your application, you MUST upload it into Google Play Console ",(0,t.jsx)(n.code,{children:"manually"}),".\nGoogle don't allow to use theirs APIs for the first upload.",(0,t.jsx)(n.br,{}),"\n","To do this, comment the three last lines of the ",(0,t.jsx)(n.code,{children:"Fastfile"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"#upload_to_play_store(\n#      track: 'internal'\n#    )\n"})}),"\n",(0,t.jsx)(n.p,{children:"or create a new lane without those lines."}),"\n",(0,t.jsxs)(n.p,{children:["\u2757"," There is no official plugin to automatically upgrade android version code (unlike the iOS lane).",(0,t.jsx)(n.br,{}),"\n","Before each deployment, be sure to ",(0,t.jsx)(n.code,{children:"manually"})," upgrade the ",(0,t.jsx)(n.code,{children:"versionCode"})," value inside ",(0,t.jsx)(n.code,{children:"android/app/build.gradle"}),".",(0,t.jsx)(n.br,{}),"\n","We are working on an automatic way to do this."]}),"\n",(0,t.jsxs)(n.p,{children:["Creating a beta build and uploading it on Google Play is now really easy.",(0,t.jsx)(n.br,{}),"\n","Just type the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ cd my-project/android\n$ fastlane beta\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.h3,{id:"stuck-at-bundle-install-or-bundle-update-running-fastlane-init",children:["Stuck at ",(0,t.jsx)(n.code,{children:"bundle install"})," or ",(0,t.jsx)(n.code,{children:"bundle update"})," running ",(0,t.jsx)(n.code,{children:"fastlane init"})]}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.code,{children:"fastlane init"})," process is stuck when running ",(0,t.jsx)(n.code,{children:"bundle install"})," or ",(0,t.jsx)(n.code,{children:"bundle update"})," it may mean that ",(0,t.jsx)(n.code,{children:"bundle"})," command is asking for root permissions.",(0,t.jsx)(n.br,{}),"\n","You can stop the process and retry again with ",(0,t.jsx)(n.code,{children:"sudo fastlane init"}),", however you will need to change back ownership of the generated files to your user when it finishes by running this command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ sudo chown <your-user> <files>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"permission-denied-running-android-beta-lane",children:"Permission denied running android beta lane"}),"\n",(0,t.jsxs)(n.p,{children:["If you have a ",(0,t.jsx)(n.code,{children:"Permission denied"})," issue on an android beta build, please run:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ chmod a+x /my-project/android/gradlew\n"})}),"\n",(0,t.jsx)(n.h3,{id:"fastlane-init-failed",children:"Fastlane init failed"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'fastlane init failed\n["The request could not be completed because:", "Could not receive latest API key from App Store Connect, this might be a server issue."]\nSomething failed while running `fastlane init`\nTried using Apple ID with email \'dev-team@yourcompany.com\'\nYou can either retry, or fallback to manual setup which will create a basic Fastfile\nWould you like to fallback to a manual Fastfile? (y/n)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Answer ",(0,t.jsx)(n.code,{children:"n"}),", and retry previous steps with a correct Apple ID and password.",(0,t.jsx)(n.br,{}),"\n","Make sure you are connected to internet."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["If you need more information, don't hesitate to read the ",(0,t.jsx)(n.a,{href:"https://docs.fastlane.tools/",children:"fastlane documentation"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);